{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","slice","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAuCeA,EApCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAmBvC,OAEI,0BAAMC,SAbW,SAAAC,GACjBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OAErCN,EAAc,OAQd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SArBc,SAAAP,GACtBF,EAAcE,EAAEQ,OAAOF,Y,uBCRlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAYZM,GAZY,4CAAH,sDCEPO,EAAc,SAAC,GAAsB,EAApBJ,GAAqB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGpC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,2BAAIA,EAAMO,MAAM,EAAG,OCJlBC,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNc,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAoBxC,OAbAC,qBAAU,WAENzB,EAAQC,GACHyB,MAAK,SAAAC,GACFH,EAAS,CACLhB,KAAMmB,EACNL,SAAU,SAIvB,CAAErB,IAGEsB,EDjByBK,CAAc3B,GAAjCa,EAFwB,EAE7BN,KAAYc,EAFiB,EAEjBA,QAEpB,OAEI,kBAAC,WAAD,KACI,wBAAIL,UAAU,qCAAqChB,GAClDqB,GAAW,uBAAGL,UAAU,oCAAb,YAEZ,yBAAKA,UAAU,aAGXH,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIkB,IAAKlB,EAAIC,IACLD,UEcbmB,EA9BM,WAAO,IAAD,EAEa3C,mBAAS,CAAC,cAFvB,mBAEhB4C,EAFgB,KAEJ7C,EAFI,KAOvB,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAE7B,6BACA,4BAEQ6C,EAAWrB,KAAI,SAAAT,GAAQ,OACnB,kBAAC,EAAD,CACI4B,IAAK5B,EACLA,SAAUA,U,MCjBtC+B,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.83883d1a.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = e => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cats => [inputValue,...cats ]);      \r\n            \r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n          \r\n        <form onSubmit={ handleSubmit }>\r\n            <input\r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","export const getGifs = async ( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=XKnCwrpqLAXie6yIISMYFZjXWrkkx079`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id,title, url }) => {\r\n    \r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{title.slice(0, 10) }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images,loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        \r\n        <Fragment>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\"> Loading</p>}\r\n            \r\n            <div className=\"card-grid\">\r\n            \r\n            {\r\n                images.map( img => (\r\n                    <GifGridItem\r\n                        key={img.id}\r\n                        {...img}\r\n                    />                    \r\n                ))                   \r\n            }\r\n            \r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        \r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading : false\r\n                })\r\n            })\r\n\r\n    }, [ category ])\r\n\r\n\r\n    return state\r\n}","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid\r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n\n//\n"],"sourceRoot":""}